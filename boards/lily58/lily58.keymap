/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define FN 3

/ {
	behaviors {
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping-term-ms = <150>;
			quick_tap_ms = <0>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
  };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
&kp GRAVE     &kp N1     &kp N2     &kp N3      &kp N4      &kp N5                     &kp N6    &kp N7      &kp N8      &kp N9     &kp N0        &kp BSPC
&kp TAB       &kp Q      &kp W      &kp E       &kp R       &kp T                      &kp Y     &kp U       &kp I       &kp O      &kp P         &kp BSLH
&mt LCTRL ESC &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F &kp G                      &kp H     &hm RSHFT J &hm RCTRL K &hm RALT L &hm RGUI SEMI &kp SINGLE_QUOTE
&kp LSHFT     &kp Z      &kp X      &kp C       &kp V       &kp B    &kp LBKT &kp RBKT &kp N     &kp M       &kp COMMA   &kp DOT    &kp FSLH      &kp RSHFT
                                &mo LOWER   &kp LGUI    &kp LALT &kp BSPC &kp SPC  &kp ENTER &mo FN      &mo RAISE
			>;
		};

		lower_layer {
			bindings = <
&kp F1   &kp F2        &kp F3      &kp F4         &kp F5         &kp F6                        &kp F7    &kp F8         &kp F9         &kp F10       &kp F11       &kp F12
&kp LBRC &kp N1        &kp N2      &kp N3         &kp N4         &kp N5                        &kp N6    &kp N7         &kp N8         &kp N9        &kp N0        &kp RBRC 
&kp LBKT &hm LGUI EXCL &hm LALT AT &hm LCTRL HASH &hm LSHFT DLLR &kp PRCNT                     &kp CARET &hm RSHFT AMPS &hm RCTRL STAR &hm RALT LPAR &hm RGUI RPAR &kp RBKT 
&kp LPAR &trans        &trans      &trans         &trans         &trans    &kp MINUS &kp EQUAL &trans    &trans         &trans         &trans        &trans        &kp RPAR 
                                   &trans         &trans         &trans    &trans    &trans    &trans    &trans         &trans
			>;
		};

		raise_layer {
			bindings = <
&kp F1   &kp F2        &kp F3      &kp F4         &kp F5         &kp F6                        &kp F7    &kp F8         &kp F9         &kp F10       &kp F11       &kp F12
&kp LBRC &kp N1        &kp N2      &kp N3         &kp N4         &kp N5                        &kp N6    &kp N7         &kp N8         &kp N9        &kp N0        &kp RBRC 
&kp LBKT &hm LGUI EXCL &hm LALT AT &hm LCTRL HASH &hm LSHFT DLLR &kp PRCNT                     &kp CARET &hm RSHFT AMPS &hm RCTRL STAR &hm RALT LPAR &hm RGUI RPAR &kp RBKT 
&kp LPAR &trans        &trans      &trans         &trans         &trans    &kp MINUS &kp EQUAL &trans    &trans         &trans         &trans        &trans        &kp RPAR 
                                   &trans         &trans         &trans    &trans    &trans    &trans    &trans         &trans
			>;
		};

		fn_layer {
			bindings = <
&trans       &trans &trans &trans &trans &trans                                    &trans    &trans &trans &trans &trans &bt BT_CLR 
&bt BT_SEL 0 &trans &trans &trans &trans &trans                                    &trans    &trans &trans &trans &trans &out OUT_USB 
&bt BT_SEL 1 &trans &trans &trans &trans &trans                                    &trans    &trans &trans &trans &trans &out OUT_BLE
&bt BT_SEL 2 &trans &trans &trans &trans &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP     &kp C_NEXT &trans &trans &trans &trans &trans 
                           &trans &trans &trans     &kp C_MUTE   &kp C_PLAY_PAUSE &trans     &trans &trans
			>;
		};
	};
};
